"ant-design select remote with multi": {
  "prefix": "coderSelectRemote",
  "body": [
    "<template>",
    "  <div>",
    "   ",
    "    <a-select",
    "      v-if=\"workProcessName\"",
    "      v-model:value=\"workProcessName\"",
    "      show-search",
    "      placeholder=\"input search text\"",
    "      style=\"width: 200px\"",
    "      mode=\"multiple\"",
    "      :default-active-first-option=\"false\"",
    "      :show-arrow=\"false\"",
    "      :filter-option=\"false\"",
    "      :not-found-content=\"null\"",
    "      :options=\"dataSource\"",
    "      @search=\"(s) => handleSearch(s)\"",
    "    />",
    "  </div>",
    "</template>",
    "<script lang=\"ts\" setup>",
    "import { Select as ASelect } from \"ant-design-vue\";",
    "import {",
    "  inject,",
    "  reactive,",
    "  PropType,",
    "  ref,",
    "  computed,",
    "  onMounted,",
    "  defineEmits,",
    "  defineProps,",
    "} from \"vue\";",
    "import { injectIptionsKey, SwfOptions } from \"../types\";",
    "import {",
    "  WorkProcessListItem,",
    "  WorkProcessPermissionSearch,",
    "  WorkProcessPermissionViewModel,",
    "} from \"../types/workProcessListItem\";",
    "const emit = defineEmits([\"update:modelValue\"]);",
    "const option = inject(injectIptionsKey) as SwfOptions;",
    "",
    "// ----------------- end -----------------------------------",
    "const props = defineProps({",
    "  modelValue: {",
    "    type: Array as PropType<Array<String>>,",
    "  },",
    "});",
    "",
    "const workProcessName = computed({",
    "  get: () => {",
    "    return props.modelValue;",
    "  },",
    "  set: (v) => {",
    "    emit(\"update:modelValue\", v);",
    "  },",
    "});",
    "",
    "const dataSource = reactive([] as Array<any>);",
    "",
    "const handleSearch = (processName: string) => {",
    "  option.workProcessApi",
    "    .listWorkProcess({",
    "      page: 1,",
    "      pageSize: 10,",
    "      processName,",
    "    } as WorkProcessPermissionSearch)",
    "    .then((resp) => {",
    "      dataSource.splice(0);",
    "      resp.data.forEach((item: WorkProcessListItem) => {",
    "        dataSource.push({",
    "          value: item.name,",
    "          label: item.name,",
    "        });",
    "      });",
    "    });",
    "};",
    "</script>"
  ],
  "description": "ant-design select remote with multi"
}